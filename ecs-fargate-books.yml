AWSTemplateFormatVersion: '2010-09-09'
Description: 'Books API on ECS Fargate behind ALB'

Parameters:
  ImageUrl:
    Type: String
    Description: ECR image URI (e.g. 123456789012.dkr.ecr.us-east-1.amazonaws.com/books-api:latest)
  ExecutionRoleArn:
    Type: String
    Description: IAM role used by ECS tasks to pull image & send logs (LabRole u otro)
  ContainerPort:
    Type: Number
    Default: 3000

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  IGW:
    Type: AWS::EC2::InternetGateway

  IGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [1, !GetAZs '']

  RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Route0:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  RTA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetA
      RouteTableId: !Ref RT

  RTB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetB
      RouteTableId: !Ref RT

  AlbSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  AppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB->App
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          SourceSecurityGroupId: !Ref AlbSG

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/books-api
      RetentionInDays: 3

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: [!Ref SubnetA, !Ref SubnetB]
      SecurityGroups: [!Ref AlbSG]

  TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: !Ref ContainerPort
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPC
      HealthCheckPath: /health

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TG

  Cluster:
    Type: AWS::ECS::Cluster

  TaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: books-task
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !Ref ExecutionRoleArn
      ContainerDefinitions:
        - Name: books
          Image: !Ref ImageUrl
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Environment:
            - Name: PORT
              Value: !Sub '${ContainerPort}'
            - Name: DB_FILE
              Value: /tmp/data.sqlite
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  Service:
    Type: AWS::ECS::Service
    DependsOn: Listener
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref TaskDef
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED        # IP p√∫blica para salir a ECR/CloudWatch
          SecurityGroups: [!Ref AppSG]
          Subnets: [!Ref SubnetA, !Ref SubnetB]
      LoadBalancers:
        - ContainerName: books
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TG

Outputs:
  AlbDNS:
    Description: DNS del ALB
    Value: !GetAtt ALB.DNSName
